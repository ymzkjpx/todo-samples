buildscript {
    ext {
        springBootVersion = "2.5.5"
        springSecurityVersion = "2.6.2"
        springSecurityTestVersion = "5.3.13.RELEASE"
        dependencyManagementVersion = "1.0.11.RELEASE"
        jigVersion = "2021.9.4"
        mybatisSpringBootStarterVersion = "2.2.0"
        postgresqlVersion = "42.2.23"
    }
}

plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${dependencyManagementVersion}"
    id 'org.dddjava.jig-gradle-plugin' version "${jigVersion}"
    id 'java'
}



group 'org.example'
version '1.0-SNAPSHOT'
sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
}

sourceSets {
    main {
        resources.srcDirs = ["src/main/java", "src/main/resources"]
    }
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}"
    runtimeOnly "org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-security:${springSecurityVersion}"
    implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisSpringBootStarterVersion}"
    developmentOnly "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
    runtimeOnly "org.postgresql:postgresql:${postgresqlVersion}"
    testImplementation "com.github.irof:jig-erd:latest.release"
    testImplementation "org.springframework.security:spring-security-test:${springSecurityTestVersion}"
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude(group: 'org.junit.vintage')
    }
}

test {
    useJUnitPlatform()
}

[compileJava, processResources]*.shouldRunAfter(clean)
jigReports.dependsOn(clean, classes)